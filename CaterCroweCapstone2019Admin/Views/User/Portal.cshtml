@model CaterCroweCapstone2019.Models.DAL.DALModels.Users.User

@{
    ViewBag.Title = "Home";
}

@Scripts.Render("~/Scripts/UserManipulation.js")

<h2>User Home</h2>
<hr />
<select id="form-type" class="form-control dropdown">
    <option value="Create">Create User</option>
    <option value="Edit">Edit User</option>
    <option value="Assign">Assign Teacher to Course</option>
</select>
<hr />
@using (Html.BeginForm("Create", "User", FormMethod.Post, new { @id = "Create-Form" }))
{

    <div class="form-horizontal">
        <h3>Create User</h3>

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MInit, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MInit, new { htmlAttributes = new { @class = "form-control", @maxlength = "1" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AccessLevel, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("AccessLevel", (SelectList)ViewBag.AccessLevels, new { @class = "form-control dropdown" })
            </div>
        </div>
    </div>

    <input type="submit" id="create-user-buttton" value="Create User" class="btn btn-outline-primary" />
    <input type="button" id="clear-create-user-button" value="Clear" class="btn btn-outline-dark" />
}

@using (Html.BeginForm("Edit", "User", FormMethod.Post, new { @id = "Edit-Form", @hidden = "hidden" }))
{

    <div class="form-horizontal">
        <h3>Edit User</h3>

        <div class="form-group">
            <div class="col-md-10">
                <input type="text" id="selected-username" class="form-control" />
                <input name="ID" id="selected-user-id" hidden />
                <br />
                <input type="button" id="find-selected-user-button" value="Select User" class="btn btn-outline-secondary" />
            </div>
        </div>

        <div id="edit-form-content" hidden="hidden">
            <div class="form-group">
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MInit, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MInit, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
        </div>
    </div>

    <input type="submit" id="edit-user-buttton" value="Edit User" class="btn btn-outline-primary" />
    <input type="button" id="clear-edit-user-button" value="Clear" class="btn btn-outline-dark" />
}

@using (Html.BeginForm("AssignTeacher", "User", FormMethod.Post, new { @id = "Assign-Form", @hidden = "hidden" }))
{

    <div class="form-horizontal">
        <h3>Assign Teacher to Course</h3>

        <div class="form-group">
            <label>Teacher Username</label>
            <input type="text" id="selected-teacher" class="form-control" />
        </div>

        <div class="form-group">
            <label>Course ID</label>
            <input type="number" id="selected-coursename" class="form-control" />
        </div>
    </div>

    <input type="submit" id="teacher-assign-buttton" value="Assign Teacher" class="btn btn-outline-primary" />
    <input type="button" id="clear-teacher-assign-button" value="Clear" class="btn btn-outline-dark" />
}

<p class="error">@TempData["error"]</p>